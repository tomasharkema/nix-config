name: "check"
on:
  push:

concurrency:
  group: "check-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}"
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v23
      - uses: cachix/cachix-action@v12
        with:
          name: devenv
      - name: Install devenv.sh
        run: nix profile install tarball+https://install.devenv.sh/latest

      - name: Run a single command in the devenv shell
        run: nix develop --accept-flake-config --impure -c "statix check"

  cachix:
    runs-on: ubuntu-latest #self-hosted
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: cachix/install-nix-action@v24
        with:
          nix_path: nixpkgs=channel:nixos-23.11
          extra_nix_config: "extra-platforms = aarch64-linux i686-linux"
      - uses: cachix/cachix-action@v12
        with:
          name: tomasharkema
          # If you chose API tokens for write access OR if you have a private cache
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - run: |
          export CACHIX_AUTH_TOKEN=${{ secrets.CACHIX_AUTH_TOKEN }}
          spec=$(nix build --print-out-paths --accept-flake-config '.#images')
          echo $spec
          cat $spec
          cachix push tomasharkema $spec
  check:
    strategy:
      matrix:
        os: [ubuntu-latest] # [self-hosted, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: cachix/install-nix-action@v24
        with:
          nix_path: nixpkgs=channel:nixos-23.11
          extra_nix_config: "extra-platforms = aarch64-linux i686-linux"
      - uses: cachix/cachix-action@v12
        with:
          name: tomasharkema
          # If you chose API tokens for write access OR if you have a private cache
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - uses: DeterminateSystems/magic-nix-cache-action@v2
      - run: nix run "https://flakehub.com/f/DeterminateSystems/flake-checker/0.1.*.tar.gz"
      - run: nix flake check --accept-flake-config --impure
      # - uses: astro/deadnix-action@main
      - uses: "DeterminateSystems/flakehub-push@main"
        with:
          name: "tomasharkema/nix-config"
          rolling: true
          visibility: "unlisted"
